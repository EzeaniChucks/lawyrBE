import * as mongoose from 'mongoose';
const childrenSchema = new mongoose.Schema({
  creatorId: { type: String, required: true },
  name: { type: String, required: true },
  children: [],
  type: { type: String, default: 'folder' },
  resource: { type: String, default: 'folder' },
  searchTags: { type: Array, required: true, default: [] },
  parentIds: [{ type: Object }],
  isSubscription: { type: Boolean, required: true, default: false },
  isPurchase: { type: Boolean, required: true, default: false },
  productPrice: { type: Number, required: true, default: 0 },
  productPriceCurrency: { type: String, required: true, default: 'NGN' },
  subscriptionPrice: { type: Number, required: true, default: 0 },
  subscriptionPriceCurrency: { type: String, required: true, default: 'NGN' },
  subscriptionDurationNo: { type: Number, required: true, default: 0 },
  subscriptionDurationUnit: {
    type: String,
    required: true,
    default: 'months',
    enum: ['days', 'weeks', 'months', 'years'],
  },
  subscribedUsersIds: { type: Array, default: [] },
  paidUsersIds: { type: Array, default: [] },
});

export const contentsSchema = new mongoose.Schema(
  {
    creatorId: { type: String, required: true },
    name: { type: String, required: true },
    children: [childrenSchema],
    type: { type: String, default: 'folder' },
    resource: { type: String, default: 'folder' },
    searchTags: { type: Array, required: true, default: [] },
    // parentIds: { type: Array, default: [] },
    parentIds: [{ type: Object }],
    isSubscription: { type: Boolean, required: true, default: false },
    isPurchase: { type: Boolean, required: true, default: false },
    productPrice: { type: Number, required: true, default: 0 },
    productPriceCurrency: { type: String, required: true, default: 'NGN' },
    subscriptionPrice: { type: Number, required: true, default: 0 },
    subscriptionPriceCurrency: { type: String, required: true, default: 'NGN' },
    subscriptionDurationNo: { type: Number, required: true, default: 0 },
    subscriptionDurationUnit: {
      type: String,
      required: true,
      default: 'months',
      enum: ['days', 'weeks', 'months', 'years'],
    },
    subscribedUsersIds: { type: Array, default: [] },
    paidUsersIds: { type: Array, default: [] },
  },
  { timestamps: true },
);
